"""
–ú–æ–¥—É–ª—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫–∞
–°–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫–∞
"""

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton


def get_autoresponder_instruction_text():
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫–∞
    
    Returns:
        str: –¢–µ–∫—Å—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
    """
    instruction_text = """<b>üìº –ê–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫</b>



üîò –í –ø–µ—Ä–≤—É—é –æ—á–µ—Ä–µ–¥—å –≤–∞–º —Å–ª–µ–¥—É–µ—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è —Å –≤–∞—à–µ–≥–æ —Ç–µ–ª–µ–≥—Ä–∞–º–º –∞–∫–∫–∞—É–Ω—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, —á—Ç–æ –Ω–∞–ø–∏—à–µ—Ç –≤–∞–º –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.
–î–æ–ø—É—Å—Ç–∏–º: "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é ! –Ø –Ω–µ –Ω–∞ —Ä–∞–±–æ—á–µ–º –º–µ—Å—Ç–µ, —Å–º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å –≤–∞–º –≤ —Ç–µ—á–µ–Ω–∏–∏ –¥–≤—É—Ö —á–∞—Å–æ–≤."

üîò –î–ª—è –æ–¥–Ω–æ–≥–æ –∏ —Ç–æ–≥–æ –∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ –±—É–¥–µ—Ç –ø–∏—Å–∞—Ç—å –≤–∞–º –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –ê–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫ –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Ä–∞–∑ –≤ 10 —Å–µ–∫—É–Ω–¥ (—Ç–µ–º —Å–∞–º—ã–º –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞—è –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π —Å–ø–∞–º –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –∫–∞–∂–¥–æ–µ –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ)

üîò –ó–∞—Ç–µ–º –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å" –≤—ã –ø–µ—Ä–µ–º–µ—â–∞–µ—Ç–µ—Å—å –≤ —Ä–∞–∑–¥–µ–ª, –≥–¥–µ –¥–æ–ª–∂–Ω—ã –≤—ã–±—Ä–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç—ã, –Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–∫–ª—é—á–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –ê–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫–∞ –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤–∞—à –≤—ã–±–æ—Ä.

üîò –ö–Ω–æ–ø–∫–∞ "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å" –ø—Ä–µ–∫—Ä–∞—â–∞–µ—Ç —Ä–∞–±–æ—Ç—É —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–∑–¥–µ–ª–∞ "–ê–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫".
"""
    
    return instruction_text


def get_autoresponder_instruction_keyboard():
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫–∞
    
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏
    """
    markup = InlineKeyboardMarkup(inline_keyboard=[])
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —Ä–∞–∑–¥–µ–ª—É –≤—ã–±–æ—Ä–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
    markup.inline_keyboard.append([
        InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è üîô", callback_data="instructions")
    ])
    
    return markup


def get_autoresponder_instruction_keyboard_en():
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∞–Ω–≥–ª–∏–π—Å–∫—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫–∞
    
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ
    """
    markup = InlineKeyboardMarkup(inline_keyboard=[])
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —Ä–∞–∑–¥–µ–ª—É –≤—ã–±–æ—Ä–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
    markup.inline_keyboard.append([
        InlineKeyboardButton(text="Back üîô", callback_data="instructions")
    ])
    
    return markup


def get_autoresponder_instruction_text_en():
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —Ç–µ–∫—Å—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫–∞
    
    Returns:
        str: –¢–µ–∫—Å—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ
    """
    instruction_text = """<b>üìº Autoresponder</b>



üîò First, prepare a text message that will be sent from your Telegram account to the user who writes to you in private messages.
For example: "Hello! I'm not at work, I can reply within two hours."

üîò For the same user who keeps messaging you in private, the Autoresponder will trigger once every 10 seconds (to prevent aggressive spam replies to each of their messages).

üîò Then, by clicking the "Activate" button, you move to the section where you should select the accounts on which you want to enable the Autoresponder feature and confirm your choice.

üîò The "Stop" button stops the Autoresponder section.
"""
    
    return instruction_text


async def send_autoresponder_instruction(bot, chat_id, user_id=None, language="ru"):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    
    Args:
        bot: –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
        chat_id: ID —á–∞—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å—Ç–∏–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π)
        language: –Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ ("ru" –∏–ª–∏ "en")
    """
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —è–∑—ã–∫–∞
        if language == "en":
            text = get_autoresponder_instruction_text_en()
            keyboard = get_autoresponder_instruction_keyboard_en()
        else:
            text = get_autoresponder_instruction_text()
            keyboard = get_autoresponder_instruction_keyboard()
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π
        await bot.send_message(
            chat_id=chat_id,
            text=text,
            reply_markup=keyboard,
            parse_mode="HTML"
        )
        
    except Exception as e:
        # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        fallback_text = "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫—É –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞." if language == "ru" else "Autoresponder instructions are temporarily unavailable."
        await bot.send_message(
            chat_id=chat_id,
            text=fallback_text,
            reply_markup=keyboard,
            parse_mode="HTML"
        )